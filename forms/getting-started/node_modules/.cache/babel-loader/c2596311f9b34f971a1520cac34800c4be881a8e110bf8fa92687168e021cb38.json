{"ast":null,"code":"import { cldr } from './info';\nvar predefinedDatePatterns = {\n  s: \"yyyy'-'MM'-'dd'T'HH':'mm':'ss\",\n  u: \"yyyy'-'MM'-'dd HH':'mm':'ss'Z'\"\n};\nvar YEAR_REGEX = /y+/g;\nvar SHORT_DATE = [[\"dateFormats\", \"short\"]];\nvar datePatterns = {\n  D: [[\"dateFormats\", \"full\"]],\n  m: [[\"dateTimeFormats\", \"availableFormats\", \"MMMd\"]],\n  M: [[\"dateTimeFormats\", \"availableFormats\", \"MMMMd\"]],\n  y: [[\"dateTimeFormats\", \"availableFormats\", \"yMMM\"]],\n  Y: [[\"dateTimeFormats\", \"availableFormats\", \"yMMMM\"]],\n  F: [[\"dateFormats\", \"full\"], [\"timeFormats\", \"medium\"]],\n  g: [[\"dateTimeFormats\", \"availableFormats\", \"yMd\"], [\"timeFormats\", \"short\"]],\n  G: [[\"dateTimeFormats\", \"availableFormats\", \"yMd\"], [\"timeFormats\", \"medium\"]],\n  t: [[\"timeFormats\", \"short\"]],\n  T: [[\"timeFormats\", \"medium\"]]\n};\nfunction toArray(obj) {\n  var result = [];\n  var names = Object.getOwnPropertyNames(obj);\n  for (var idx = 0; idx < names.length; idx++) {\n    var value = obj[names[idx]];\n    result.push(value);\n  }\n  return result;\n}\nfunction getCalendarNames(info, isObj) {\n  var result = {};\n  for (var formatType in info) {\n    var names = result[formatType] = {};\n    for (var format in info[formatType]) {\n      var formats = info[formatType][format];\n      names[format] = isObj ? formats : toArray(formats);\n    }\n  }\n  return result;\n}\nfunction getEraNames(eras) {\n  var result = {};\n  var format = result.format = {};\n  var eraNameMap = {\n    eraAbbr: \"abbreviated\",\n    eraNames: \"wide\",\n    eraNarrow: \"narrow\"\n  };\n  for (var eraFormatName in eras) {\n    var formatName = eraNameMap[eraFormatName];\n    format[formatName] = eras[eraFormatName];\n  }\n  return result;\n}\nfunction loadCalendarNames(locale, calendar) {\n  var localeCalendar = cldr[locale].calendar;\n  localeCalendar.days = getCalendarNames(calendar.days);\n  localeCalendar.months = getCalendarNames(calendar.months);\n  localeCalendar.quarters = getCalendarNames(calendar.quarters);\n  localeCalendar.dayPeriods = getCalendarNames(calendar.dayPeriods, true);\n  localeCalendar.eras = getEraNames(calendar.eras);\n}\nfunction loadCalendarDateFields(locale, fields) {\n  var localeCalendar = cldr[locale].calendar;\n  var dateFields = {};\n  for (var field in fields) {\n    var ref = field.split('-');\n    var fieldName = ref[0];\n    var formatType = ref[1];\n    if (formatType === void 0) formatType = 'wide';\n    var fieldInfo = dateFields[fieldName] || {};\n    var displayName = fields[field].displayName;\n    if (!displayName) {\n      continue;\n    }\n    fieldInfo[formatType] = displayName;\n    dateFields[fieldName] = fieldInfo;\n  }\n  localeCalendar.dateFields = dateFields;\n}\nfunction getPredefinedFormat(paths, calendar) {\n  var result = [];\n  for (var pathIdx = 0; pathIdx < paths.length; pathIdx++) {\n    var fields = paths[pathIdx];\n    var pattern = calendar;\n    for (var idx = 0; idx < fields.length; idx++) {\n      pattern = pattern[fields[idx]];\n    }\n    result.push(pattern);\n  }\n  return result.join(\" \");\n}\nfunction loadCalendarPatterns(locale, calendar) {\n  var cldrCalendar = cldr[locale].calendar;\n  var patterns = cldrCalendar.patterns = {};\n  patterns.d = getPredefinedFormat(SHORT_DATE, calendar).replace(YEAR_REGEX, 'y');\n  for (var pattern in datePatterns) {\n    patterns[pattern] = getPredefinedFormat(datePatterns[pattern], calendar);\n  }\n  for (var pattern$1 in predefinedDatePatterns) {\n    patterns[pattern$1] = predefinedDatePatterns[pattern$1];\n  }\n  var dateTimeFormats = calendar.dateTimeFormats;\n  cldrCalendar.dateTimeFormats = {\n    full: dateTimeFormats.full,\n    long: dateTimeFormats.long,\n    medium: dateTimeFormats.medium,\n    short: dateTimeFormats.short,\n    availableFormats: dateTimeFormats.availableFormats\n  };\n  cldrCalendar.timeFormats = calendar.timeFormats;\n  cldrCalendar.dateFormats = calendar.dateFormats;\n}\nexport default function loadCalendarInfo(locale, info) {\n  var calendar = cldr[locale].calendar = cldr[locale].calendar || {};\n  for (var field in info) {\n    if (field === \"timeZoneNames\") {\n      calendar.gmtFormat = info[field].gmtFormat;\n      calendar.gmtZeroFormat = info[field].gmtZeroFormat;\n    } else if (field === \"calendars\" && info[field].gregorian) {\n      loadCalendarPatterns(locale, info[field].gregorian);\n      loadCalendarNames(locale, info[field].gregorian);\n    } else if (field === \"fields\") {\n      loadCalendarDateFields(locale, info.fields);\n    }\n  }\n}","map":{"version":3,"names":["cldr","predefinedDatePatterns","s","u","YEAR_REGEX","SHORT_DATE","datePatterns","D","m","M","y","Y","F","g","G","t","T","toArray","obj","result","names","Object","getOwnPropertyNames","idx","length","value","push","getCalendarNames","info","isObj","formatType","format","formats","getEraNames","eras","eraNameMap","eraAbbr","eraNames","eraNarrow","eraFormatName","formatName","loadCalendarNames","locale","calendar","localeCalendar","days","months","quarters","dayPeriods","loadCalendarDateFields","fields","dateFields","field","ref","split","fieldName","fieldInfo","displayName","getPredefinedFormat","paths","pathIdx","pattern","join","loadCalendarPatterns","cldrCalendar","patterns","d","replace","pattern$1","dateTimeFormats","full","long","medium","short","availableFormats","timeFormats","dateFormats","loadCalendarInfo","gmtFormat","gmtZeroFormat","gregorian"],"sources":["/home/shermannatrix/RnD/ttg-kendoreact/getting-started/first-kr-app/node_modules/@progress/kendo-intl/dist/es/cldr/load-dates.js"],"sourcesContent":["import { cldr } from './info';\n\nvar predefinedDatePatterns = {\n    s: \"yyyy'-'MM'-'dd'T'HH':'mm':'ss\",\n    u: \"yyyy'-'MM'-'dd HH':'mm':'ss'Z'\"\n};\n\nvar YEAR_REGEX = /y+/g;\nvar SHORT_DATE = [ [ \"dateFormats\", \"short\" ] ];\n\nvar datePatterns = {\n    D: [ [ \"dateFormats\", \"full\" ] ],\n    m: [ [ \"dateTimeFormats\", \"availableFormats\", \"MMMd\" ] ],\n    M: [ [ \"dateTimeFormats\", \"availableFormats\", \"MMMMd\" ] ],\n    y: [ [ \"dateTimeFormats\", \"availableFormats\", \"yMMM\" ] ],\n    Y: [ [ \"dateTimeFormats\", \"availableFormats\", \"yMMMM\" ] ],\n    F: [ [ \"dateFormats\", \"full\" ], [ \"timeFormats\", \"medium\" ] ],\n    g: [ [ \"dateTimeFormats\", \"availableFormats\", \"yMd\" ], [ \"timeFormats\", \"short\" ] ],\n    G: [ [ \"dateTimeFormats\", \"availableFormats\", \"yMd\" ], [ \"timeFormats\", \"medium\" ] ],\n    t: [ [ \"timeFormats\", \"short\" ] ],\n    T: [ [ \"timeFormats\", \"medium\" ] ]\n};\n\nfunction toArray(obj) {\n    var result = [];\n    var names = Object.getOwnPropertyNames(obj);\n    for (var idx = 0; idx < names.length; idx++) {\n        var value = obj[names[idx]];\n        result.push(value);\n    }\n    return result;\n}\n\nfunction getCalendarNames(info, isObj) {\n    var result = {};\n    for (var formatType in info) {\n        var names = result[formatType] = {};\n        for (var format in info[formatType]) {\n            var formats = info[formatType][format];\n            names[format] = isObj ? formats : toArray(formats);\n        }\n    }\n    return result;\n}\n\nfunction getEraNames(eras) {\n    var result = {};\n    var format = result.format = {};\n    var eraNameMap = {\n        eraAbbr: \"abbreviated\",\n        eraNames: \"wide\",\n        eraNarrow: \"narrow\"\n    };\n\n    for (var eraFormatName in eras) {\n        var formatName = eraNameMap[eraFormatName];\n        format[formatName] = eras[eraFormatName];\n    }\n\n    return result;\n}\n\nfunction loadCalendarNames(locale, calendar) {\n    var localeCalendar = cldr[locale].calendar;\n    localeCalendar.days = getCalendarNames(calendar.days);\n    localeCalendar.months = getCalendarNames(calendar.months);\n    localeCalendar.quarters = getCalendarNames(calendar.quarters);\n    localeCalendar.dayPeriods = getCalendarNames(calendar.dayPeriods, true);\n\n    localeCalendar.eras = getEraNames(calendar.eras);\n}\n\nfunction loadCalendarDateFields(locale, fields) {\n    var localeCalendar = cldr[locale].calendar;\n    var dateFields = {};\n\n    for (var field in fields) {\n        var ref = field.split('-');\n        var fieldName = ref[0];\n        var formatType = ref[1]; if ( formatType === void 0 ) formatType = 'wide';\n        var fieldInfo = dateFields[fieldName] || {};\n        var displayName = fields[field].displayName;\n\n        if (!displayName) { continue; }\n\n        fieldInfo[formatType] = displayName;\n        dateFields[fieldName] = fieldInfo;\n    }\n\n    localeCalendar.dateFields = dateFields;\n}\n\nfunction getPredefinedFormat(paths, calendar) {\n    var result = [];\n\n    for (var pathIdx = 0; pathIdx < paths.length; pathIdx++) {\n        var fields = paths[ pathIdx ];\n        var pattern = calendar;\n        for (var idx = 0; idx < fields.length; idx++) {\n            pattern = pattern[fields[idx]];\n        }\n        result.push(pattern);\n    }\n\n    return result.join(\" \");\n}\n\nfunction loadCalendarPatterns(locale, calendar) {\n    var cldrCalendar = cldr[locale].calendar;\n    var patterns = cldrCalendar.patterns = {};\n\n    patterns.d = getPredefinedFormat(SHORT_DATE, calendar).replace(YEAR_REGEX, 'y');\n\n    for (var pattern in datePatterns) {\n        patterns[pattern] = getPredefinedFormat(datePatterns[pattern], calendar);\n    }\n\n    for (var pattern$1 in predefinedDatePatterns) {\n        patterns[pattern$1] = predefinedDatePatterns[pattern$1];\n    }\n\n    var dateTimeFormats = calendar.dateTimeFormats;\n    cldrCalendar.dateTimeFormats = {\n        full: dateTimeFormats.full,\n        long: dateTimeFormats.long,\n        medium: dateTimeFormats.medium,\n        short: dateTimeFormats.short,\n        availableFormats: dateTimeFormats.availableFormats\n    };\n    cldrCalendar.timeFormats = calendar.timeFormats;\n    cldrCalendar.dateFormats = calendar.dateFormats;\n}\n\n\nexport default function loadCalendarInfo(locale, info) {\n    var calendar = cldr[locale].calendar = cldr[locale].calendar || {};\n    for (var field in info) {\n        if (field === \"timeZoneNames\") {\n            calendar.gmtFormat = info[field].gmtFormat;\n            calendar.gmtZeroFormat = info[field].gmtZeroFormat;\n        } else if (field === \"calendars\" && info[field].gregorian) {\n            loadCalendarPatterns(locale, info[field].gregorian);\n            loadCalendarNames(locale, info[field].gregorian);\n        } else if (field === \"fields\") {\n            loadCalendarDateFields(locale, info.fields);\n        }\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}